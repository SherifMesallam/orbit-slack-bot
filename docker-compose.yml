# docker-compose.yml

version: '3.8'

services:
  # Application Service (Sagan Bot)
  app:
    container_name: sagan_app
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env # Load environment variables from .env file
    ports:
      # Map host port (from .env variable PORT, default 3000) to container port 3000
      - "${PORT:-3000}:3000"
    depends_on:
      # App should wait for Redis and DB services if they are used
      redis:
        condition: service_healthy # Wait for redis healthcheck
      db:
        condition: service_healthy # Wait for db healthcheck
    restart: unless-stopped
    networks:
      - sagan_net # Connect to custom network

  # Redis Service (Optional, if using Redis via Docker)
  redis:
    container_name: sagan_redis
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis_data:/data # Persist Redis data
    # ports: # Typically not needed to expose Redis directly to host unless debugging
    #   - "6379:6379"
    networks:
      - sagan_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PostgreSQL Service (Optional, if using Postgres via Docker)
  db:
    container_name: sagan_db
    image: postgres:15-alpine
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist PostgreSQL data
    env_file:
      - .env # Load DB credentials from .env file (uses POSTGRES_USER, POSTGRES_PASSWORD, POSTGRES_DB)
    # ports: # Typically not needed to expose DB directly to host unless debugging
    #   - "5432:5432"
    networks:
      - sagan_net
    healthcheck:
      # Use environment variables defined in .env for the check
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-sagandb}"]
      interval: 10s
      timeout: 5s
      retries: 5

# Define Networks
networks:
  sagan_net: # Renamed network
    driver: bridge

# Define Volumes for data persistence
volumes:
  redis_data:
    driver: local
  postgres_data:
    driver: local
